"""
This type stub file was generated by pyright.
"""

from django.views.generic.list import BaseListView

class AutocompleteJsonView(BaseListView):
    """Handle AutocompleteWidget's AJAX requests for data."""
    paginate_by = ...
    admin_site = ...
    def get(self, request, *args, **kwargs): # -> JsonResponse:
        """
        Return a JsonResponse with search results as defined in
        serialize_result(), by default:
        {
            results: [{id: "123" text: "foo"}],
            pagination: {more: true}
        }
        """
        ...
    
    def serialize_result(self, obj, to_field_name): # -> dict[str, str]:
        """
        Convert the provided model object to a dictionary that is added to the
        results list.
        """
        ...
    
    def get_paginator(self, *args, **kwargs):
        """Use the ModelAdmin's paginator."""
        ...
    
    def get_queryset(self):
        """Return queryset based on ModelAdmin.get_search_results()."""
        ...
    
    def process_request(self, request): # -> tuple[Any, Any, Any, Any]:
        """
        Validate request integrity, extract and return request parameters.

        Since the subsequent view permission check requires the target model
        admin, which is determined here, raise PermissionDenied if the
        requested app, model or field are malformed.

        Raise Http404 if the target model admin is not configured properly with
        search_fields.
        """
        ...
    
    def has_perm(self, request, obj=...):
        """Check if user has permission to access the related model."""
        ...
    


